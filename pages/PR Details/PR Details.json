{
  "unpublishedPage": {
    "name": "PR Details",
    "slug": "pr-details",
    "layouts": [
      {
        "viewMode": false,
        "dsl": {
          "widgetName": "MainContainer",
          "backgroundColor": "none",
          "rightColumn": 1224,
          "snapColumns": 64,
          "detachFromLayout": true,
          "widgetId": "0",
          "topRow": 0,
          "bottomRow": 3230,
          "containerStyle": "none",
          "snapRows": 106,
          "parentRowSpace": 1,
          "type": "CANVAS_WIDGET",
          "canExtend": true,
          "version": 89,
          "minHeight": 1070,
          "parentColumnSpace": 1,
          "dynamicBindingPathList": [],
          "leftColumn": 0
        },
        "layoutOnLoadActions": [
          [
            {
              "id": "PR Details_getActions",
              "name": "getActions",
              "confirmBeforeExecute": false,
              "pluginType": "DB",
              "jsonPathKeys": [],
              "timeoutInMillisecond": 10000
            }
          ],
          [
            {
              "id": "PR Details_InitUtils.init",
              "name": "InitUtils.init",
              "collectionId": "PR Details_InitUtils",
              "confirmBeforeExecute": false,
              "pluginType": "JS",
              "jsonPathKeys": [
                "async () => {\n  await Promise.all([getAllRepos.run(), getMetrics.run(), storeValue(InitUtils.FAILURES_COUNT, undefined), storeValue('PR_' + InitUtils.FAILURES_COUNT, undefined), storeValue(InitUtils.PR_DETAILS_DATA, undefined)]);\n  await fetchLast100PRruns.run();\n  await getPRMetaRuns.run();\n  await getLastReleaseRuns.run();\n  const runIdValue = appsmith.URL.queryParams.runId ?? Utils.getRunIdAttemptOptions()?.[0]?.value;\n  await Promise.all([getRunData.run({\n    runId: runIdValue\n  }), getLatestReleaseMean.run({\n    metaId: Utils.getMinimumRunMetaId(runIdValue)\n  }), getShortTermReleaseMean.run({\n    metaId: Utils.getMinimumRunMetaId(runIdValue)\n  }), getCombinedRunData.run({\n    runId: runIdValue\n  })]).then(data => {\n    return storeValue(InitUtils.PR_DETAILS_DATA, {\n      runData: data[0],\n      latestReleaseMean: data[1],\n      shortTermMean: data[2],\n      combinedRunData: data[3]\n    });\n  }).catch(data => {\n    return storeValue(InitUtils.PR_DETAILS_DATA, undefined);\n  });\n  await InitUtils.checkCombinedRunData();\n  getPrDetails.run();\n}"
              ],
              "timeoutInMillisecond": 10000
            }
          ]
        ],
        "layoutOnLoadActionErrors": [],
        "validOnPageLoadActions": true,
        "id": "PR Details",
        "deleted": false,
        "policies": [],
        "userPermissions": []
      }
    ],
    "userPermissions": [],
    "policies": [],
    "isHidden": false
  },
  "deleted": false,
  "gitSyncId": "622f1c59f1c0af1ceded29e3_6324722ad54cbb52f19ac260"
}